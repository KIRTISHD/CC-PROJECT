# CC-PROJECT
Pull this repo for project

To use this project follow the following steps: - 
(Note you will require internet connection for inital part).
------------------------------------------------------------------------------------------------------
1) Download the Node from Nodejs site (nodejs.org) or download from here directly
(https://nodejs.org/dist/v5.0.0/node-v5.0.0-x64.msi).
{Optional - Download Atom if possible, It's better to travel between files easilylink - https://atom.io/}
-------------------------------------------------------------------------------------------------------
2) Create a folder in any drive you want (I'll use D here-"D:/").
-------------------------------------------------------------------------------------------------------
3) Then Open command prompt and Install express framework using following command "npm install -g express-generator".
      eg "D:\CC PROJECT>npm install -g express-generator".
-------------------------------------------------------------------------------------------------------
4) then install stylus framework for css "npm install stylus -g".
      eg "D:\CC PROJECT>npm install stylus -g".
-------------------------------------------------------------------------------------------------------    
5) Finally to create project folder type - express PROJECT (We all will use same folder name here i.e. PROJECT)
			eg "D:\CC PROJECT>express PROJECT"
			
			YOu will see something like this-
			
			  create : PROJECT
   create : PROJECT/package.json
   create : PROJECT/app.js
   create : PROJECT/public
   create : PROJECT/routes
   create : PROJECT/routes/index.js
   create : PROJECT/routes/users.js
   create : PROJECT/public/javascripts
   create : PROJECT/public/stylesheets
   create : PROJECT/public/stylesheets/style.css
   create : PROJECT/public/images
   create : PROJECT/views
   create : PROJECT/views/index.jade
   create : PROJECT/views/layout.jade
   create : PROJECT/views/error.jade
   create : PROJECT/bin
   create : PROJECT/bin/www
-------------------------------------------------------------------------------------------------------
6) Now type "npm install"
		eg "D:\CC PROJECT\PROJECT>npm install"
		
		You will see something like this- 
		
		debug@2.2.0 node_modules\debug
└── ms@0.7.1

serve-favicon@2.3.0 node_modules\serve-favicon
├── etag@1.7.0
├── fresh@0.3.0
├── ms@0.7.1
└── parseurl@1.3.0

cookie-parser@1.3.5 node_modules\cookie-parser
├── cookie@0.1.3
└── cookie-signature@1.0.6

morgan@1.6.1 node_modules\morgan
├── on-headers@1.0.1
├── basic-auth@1.0.3
├── depd@1.0.1
└── on-finished@2.3.0 (ee-first@1.1.1)

body-parser@1.13.3 node_modules\body-parser
├── content-type@1.0.1
├── bytes@2.1.0
├── depd@1.0.1
├── qs@4.0.0
├── iconv-lite@0.4.11
├── raw-body@2.1.4 (unpipe@1.0.0, iconv-lite@0.4.12)
├── on-finished@2.3.0 (ee-first@1.1.1)
├── http-errors@1.3.1 (inherits@2.0.1, statuses@1.2.1)
└── type-is@1.6.9 (media-typer@0.3.0, mime-types@2.1.7)

express@4.13.3 node_modules\express
├── merge-descriptors@1.0.0
├── utils-merge@1.0.0
├── escape-html@1.0.2
├── range-parser@1.0.3
├── vary@1.0.1
├── methods@1.1.1
├── etag@1.7.0
├── array-flatten@1.1.1
├── content-type@1.0.1
├── cookie@0.1.3
├── cookie-signature@1.0.6
├── parseurl@1.3.0
├── fresh@0.3.0
├── path-to-regexp@0.1.7
├── content-disposition@0.5.0
├── serve-static@1.10.0
├── depd@1.0.1
├── qs@4.0.0
├── finalhandler@0.4.0 (unpipe@1.0.0)
├── on-finished@2.3.0 (ee-first@1.1.1)
├── send@0.13.0 (statuses@1.2.1, destroy@1.0.3, ms@0.7.1, mime@1.3.4, http-errors@1.3.1)
├── proxy-addr@1.0.8 (forwarded@0.1.0, ipaddr.js@1.0.1)
├── accepts@1.2.13 (negotiator@0.5.3, mime-types@2.1.7)
└── type-is@1.6.9 (media-typer@0.3.0, mime-types@2.1.7)

jade@1.11.0 node_modules\jade
├── character-parser@1.2.1
├── void-elements@2.0.1
├── commander@2.6.0
├── mkdirp@0.5.1 (minimist@0.0.8)
├── jstransformer@0.0.2 (is-promise@2.1.0, promise@6.1.0)
├── clean-css@3.4.8 (source-map@0.4.4, commander@2.8.1)
├── constantinople@3.0.2 (acorn@2.6.4)
├── with@4.0.3 (acorn@1.2.2, acorn-globals@1.0.9)
├── transformers@2.1.0 (css@1.0.8, promise@2.0.0, uglify-js@2.2.5)
└── uglify-js@2.6.1 (uglify-to-browserify@1.0.2, async@0.2.10, source-map@0.5.3, yargs@3.10.0)

Now here you may get a different output which is okay but the format will look like this
-------------------------------------------------------------------------------------------------------
7) Now open "package.json" 
    eg "D:\CC PROJECT\PROJECT\package.json"
  and you should find - 
  
  {
  "name": "PROJECT",
  "version": "0.0.0",
  "private": true,
  "scripts": {
    "start": "node ./bin/www"
  },
  "dependencies": {
    "body-parser": "~1.14.1",
    "cookie-parser": "~1.4.0",
    "debug": "~2.2.0",
    "express": "~4.13.3",
    "jade": "~1.11.0",
    "morgan": "~1.6.1",
    "serve-favicon": "~2.3.0",
    "mongodb": "~2.0.48",
    "monk": "~1.0.1"
  }
}

IF ANYTHING IS MISSING, ADD IT IN THE FILE SO THAT IT LOOKS LIKE THIS. AND RUN "npm install"
AND IF YOU HAVE DIFFERENT VERSION NUMBER, iT'S ALRIGHT IT DOESN'T MATTER.
-------------------------------------------------------------------------------------------------------
8)Now create a new directory for storing mongodb data called "data"
   eg "D:\CC PROJECT\PROJECT>mkdir data".
-------------------------------------------------------------------------------------------------------
9) This is where you can test if nodejs and express works or not using "npm start"
    eg 
    
    and you will see something like this -   
  > PROJECT@0.0.0 start D:\CC PROJECT\PROJECT
  > node ./bin/www

  and go to localhost:3000 in your favourite browser and you will see express homepage
  IF YOU SEE THS EXPRESS HOMEPAGE THEN YOU ARE IN RIGHT TRACK 
  AND IF YOU GET ANY PROBLEM CONTACT ME OR POST IT IN WHATSAPP GROUP.
  
-------------------------------------------------------------------------------------------------------
10)
